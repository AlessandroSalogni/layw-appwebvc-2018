@model Patient
@using System;
@using System.Collections.Generic;
@using LaywApplication.Controllers.Utils;
@using LaywApplication.Models;
@using Newtonsoft.Json.Linq;


<div class="demo-section k-content">
	<div id="tabstrip-activities">
		<ul>
			@{
                //TODO pensare se fare qui una chiamata ajax oppure riempire il modello
				JObject jsonActivities = await APIUtils.GetAsync("https://localhost:44333/dashboard/patients/" + Model.Id + "/activities");
				List<Activity> activities = ((JArray)jsonActivities.GetValue("activities")).GetList<Activity>();

				@*<li class="k-state-active">0.@activities[0].ActivityName</li>*@
					for (int i = 0; i < activities.Count; i++)
					{
                        <li id="tab-item-activity-@i"class="mnu-activity" data-id="@i">@activities[i].ActivityName @i</li>
					}
			}
		</ul>
		@{
			for (int i = 0; i < activities.Count; i++)
			{
				<div>
					@{await Html.RenderPartialAsync("PatientActivity", Tuple.Create("activity" + i, "activities", activities[i], Model, i));}
				</div>
			}
		}
	</div>
</div>

<script>
    $(document).ready(createTabStrip("activities"));
</script>



<script>
	$("#tab-item-activities").click(function () {
		$("#tab-item-activity-0").trigger("click");
	})

	$(".mnu-activity").click(function () {
		counter("#counter-activity" + $(this).attr('data-id') + " .counter-value");
	});
</script>