@using System;
@using System.Collections.Generic;
@using LaywApplication.Controllers.Utils;
@using LaywApplication.Models;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Converters;
@using Newtonsoft.Json.Linq;

@model int

<div class="container container-inner">
    <div class="row">
        <div class="col-sm-12 no-space">
            @{await Html.RenderPartialAsync("LineChart", Tuple.Create("Weights", "Weight", "weightpatient", "Weight", 40, (Patient)ViewBag.CurrentPatient));}
        </div>
    </div>

    <div class="row">
        <div class="col-sm-6 no-space">
            @{await Html.RenderPartialAsync("LineChart", Tuple.Create("StepsDaily", "Goal Steps Daily", "stepspatient", "Steps", 1000, (Patient)ViewBag.CurrentPatient));}
        </div>

        <div class="col-sm-6 no-space">
            @{await Html.RenderPartialAsync("LineChart", Tuple.Create("CaloriesDaily", "Goal Calories Daily", "caloriesoutpatient", "Calories", 500, (Patient)ViewBag.CurrentPatient));}
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12 no-space">
            <div class="demo-section k-content">
                <div id="tabstrip-activities">
                    <ul>
                        @{
                            JObject obj = await APIUtils.GetAsync("https://localhost:44333/dashboard/patients/" + Model.ToString() + "/activities");
                            JArray array = (JArray)obj.GetValue("activities");

                            IsoDateTimeConverter DateTimeConverter = new IsoDateTimeConverter { DateTimeFormat = "dd-MM-yyyy" };
                            List<Activity> activities = JsonConvert.DeserializeObject<List<Activity>>(array.ToString(), DateTimeConverter);

                            for (int i = 0; i < activities.Count; i++)
                            {
                                <li>@i.@activities[i].ActivityName</li>
                            }
                        }
                    </ul>


                    @{
                        for (int i = 0; i < activities.Count; i++)
                        {
                            await Html.RenderPartialAsync("PatientActivity", Tuple.Create("activity" + i, "activities", activities[i], (Patient)ViewBag.CurrentPatient));
                        }
                    }
                </div>
            </div>
        </div>
    </div>

</div>


<style>
    .no-space {
        padding: 0;
        border: none;
    }

    @@media (min-width: 1200px) {
        .container-inner {
            width: 1000px !important;
        }
    }
</style>

<script>
    $(document).ready(createTabStrip("activities"));
</script>
